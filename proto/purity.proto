syntax = "proto3";

package build.please.remote.purity;

// The GC service provides an API for storage servers to report on their
// current status (free storage capacity and management of existing blobs).
service GC {
  // List provides a listing of currently stored items in the AC / CAS.
  rpc List(ListRequest) returns (ListResponse);
  // Delete removes some items from the server.
  rpc Delete(DeleteRequest) returns (DeleteResponse);
}

message ListRequest {
  // The prefix of blobs to list. Should be exactly two hex characters.
  string prefix = 1;
}

message ListResponse {
  // List of results in the AC on this server.
  repeated ActionResult action_results = 1;
  // List of blobs this server stores.
  repeated Blob blobs = 2;
}

// An ActionResult is a reference to an action result with a little additional
// information.
message ActionResult {
  string hash = 1;
  int64 size_bytes = 2;
  int64 last_accessed = 3;
}

message Blob {
  string hash = 1;
  int64 size_bytes = 2;
}

message DeleteRequest {
  // Prefix of blobs to delete. Should be exactly two hex characters.
  string prefix = 3;
  // Action results to delete.
  repeated Blob action_results = 1;
  // CAS blobs to delete.
  repeated Blob blobs = 2;
  // True to force a 'hard' delete.
  // False gives the server an option to 'soft' delete them (however it may
  // interpret that).
  bool hard = 4;
}

message DeleteResponse {}
