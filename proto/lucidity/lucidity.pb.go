// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.11.4
// source: proto/lucidity/lucidity.proto

package build_please_remote_lucidity

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type UpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of this worker.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The version this worker is currently at
	Version string `protobuf:"bytes,12,opt,name=version,proto3" json:"version,omitempty"`
	// The time the worker started at (as a Unix timestamp)
	StartTime int64 `protobuf:"varint,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// The time the server is reporting in at (the server may overwrite this)
	UpdateTime int64 `protobuf:"varint,3,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	// A human-readable string describing the current state of the server.
	Status string `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	// Whether the worker currently considers itself healthy.
	Healthy bool `protobuf:"varint,5,opt,name=healthy,proto3" json:"healthy,omitempty"`
	// Whether the worker was busy at the point it sent this request.
	Busy bool `protobuf:"varint,6,opt,name=busy,proto3" json:"busy,omitempty"`
	// Whether the worker is now alive or not (note that it is possible to be
	// alive but unhealthy)
	Alive bool `protobuf:"varint,7,opt,name=alive,proto3" json:"alive,omitempty"`
	// A URL containing the last unit of work the server performed.
	LastTask string `protobuf:"bytes,8,opt,name=last_task,json=lastTask,proto3" json:"last_task,omitempty"`
	// Server-side only; indicates whether this server has been shut down.
	Disabled bool `protobuf:"varint,9,opt,name=disabled,proto3" json:"disabled,omitempty"`
	// ID of the currently executing task, if there is one.
	CurrentTask string `protobuf:"bytes,10,opt,name=current_task,json=currentTask,proto3" json:"current_task,omitempty"`
	// The time the current task was started at.
	TaskStartTime int64 `protobuf:"varint,11,opt,name=task_start_time,json=taskStartTime,proto3" json:"task_start_time,omitempty"`
}

func (x *UpdateRequest) Reset() {
	*x = UpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lucidity_lucidity_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRequest) ProtoMessage() {}

func (x *UpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lucidity_lucidity_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRequest.ProtoReflect.Descriptor instead.
func (*UpdateRequest) Descriptor() ([]byte, []int) {
	return file_proto_lucidity_lucidity_proto_rawDescGZIP(), []int{0}
}

func (x *UpdateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *UpdateRequest) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *UpdateRequest) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *UpdateRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UpdateRequest) GetHealthy() bool {
	if x != nil {
		return x.Healthy
	}
	return false
}

func (x *UpdateRequest) GetBusy() bool {
	if x != nil {
		return x.Busy
	}
	return false
}

func (x *UpdateRequest) GetAlive() bool {
	if x != nil {
		return x.Alive
	}
	return false
}

func (x *UpdateRequest) GetLastTask() string {
	if x != nil {
		return x.LastTask
	}
	return ""
}

func (x *UpdateRequest) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

func (x *UpdateRequest) GetCurrentTask() string {
	if x != nil {
		return x.CurrentTask
	}
	return ""
}

func (x *UpdateRequest) GetTaskStartTime() int64 {
	if x != nil {
		return x.TaskStartTime
	}
	return 0
}

type UpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// True if the receiving server should become unavailable until it receives
	// another response saying it's ok to come back to life again.
	ShouldDisable bool `protobuf:"varint,1,opt,name=should_disable,json=shouldDisable,proto3" json:"should_disable,omitempty"`
}

func (x *UpdateResponse) Reset() {
	*x = UpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lucidity_lucidity_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateResponse) ProtoMessage() {}

func (x *UpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lucidity_lucidity_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateResponse.ProtoReflect.Descriptor instead.
func (*UpdateResponse) Descriptor() ([]byte, []int) {
	return file_proto_lucidity_lucidity_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateResponse) GetShouldDisable() bool {
	if x != nil {
		return x.ShouldDisable
	}
	return false
}

// This is not part of the actual RPC API but is used to serve from HTTP.
type Workers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of all the currently known workers.
	Workers []*UpdateRequest `protobuf:"bytes,1,rep,name=workers,proto3" json:"workers,omitempty"`
}

func (x *Workers) Reset() {
	*x = Workers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lucidity_lucidity_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Workers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Workers) ProtoMessage() {}

func (x *Workers) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lucidity_lucidity_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Workers.ProtoReflect.Descriptor instead.
func (*Workers) Descriptor() ([]byte, []int) {
	return file_proto_lucidity_lucidity_proto_rawDescGZIP(), []int{2}
}

func (x *Workers) GetWorkers() []*UpdateRequest {
	if x != nil {
		return x.Workers
	}
	return nil
}

// This is part of the HTTP API; the request to disable a worker.
type Disable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the worker to disable
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// If true, worker is disabled; if false, it will become enabled.
	Disable bool `protobuf:"varint,2,opt,name=disable,proto3" json:"disable,omitempty"`
}

func (x *Disable) Reset() {
	*x = Disable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lucidity_lucidity_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Disable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Disable) ProtoMessage() {}

func (x *Disable) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lucidity_lucidity_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Disable.ProtoReflect.Descriptor instead.
func (*Disable) Descriptor() ([]byte, []int) {
	return file_proto_lucidity_lucidity_proto_rawDescGZIP(), []int{3}
}

func (x *Disable) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Disable) GetDisable() bool {
	if x != nil {
		return x.Disable
	}
	return false
}

var File_proto_lucidity_lucidity_proto protoreflect.FileDescriptor

var file_proto_lucidity_lucidity_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x64, 0x69, 0x74, 0x79,
	0x2f, 0x6c, 0x75, 0x63, 0x69, 0x64, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x1c, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2e, 0x70, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x2e, 0x72, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x6c, 0x75, 0x63, 0x69, 0x64, 0x69, 0x74, 0x79, 0x22, 0xdd, 0x02,
	0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x62, 0x75, 0x73, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x62,
	0x75, 0x73, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x76, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x76, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73,
	0x74, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61,
	0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x61,
	0x73, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d,
	0x74, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x37, 0x0a,
	0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x25, 0x0a, 0x0e, 0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x44,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x50, 0x0a, 0x07, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72,
	0x73, 0x12, 0x45, 0x0a, 0x07, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2e, 0x70, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x6c, 0x75, 0x63, 0x69, 0x64, 0x69, 0x74,
	0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x07, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x22, 0x37, 0x0a, 0x07, 0x44, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x32, 0x6f, 0x0a, 0x08, 0x4c, 0x75, 0x63, 0x69, 0x64, 0x69, 0x74, 0x79, 0x12, 0x63, 0x0a,
	0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x2b, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2e,
	0x70, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x6c, 0x75,
	0x63, 0x69, 0x64, 0x69, 0x74, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2e, 0x70, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x6c, 0x75, 0x63, 0x69, 0x64,
	0x69, 0x74, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_lucidity_lucidity_proto_rawDescOnce sync.Once
	file_proto_lucidity_lucidity_proto_rawDescData = file_proto_lucidity_lucidity_proto_rawDesc
)

func file_proto_lucidity_lucidity_proto_rawDescGZIP() []byte {
	file_proto_lucidity_lucidity_proto_rawDescOnce.Do(func() {
		file_proto_lucidity_lucidity_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_lucidity_lucidity_proto_rawDescData)
	})
	return file_proto_lucidity_lucidity_proto_rawDescData
}

var file_proto_lucidity_lucidity_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_proto_lucidity_lucidity_proto_goTypes = []interface{}{
	(*UpdateRequest)(nil),  // 0: build.please.remote.lucidity.UpdateRequest
	(*UpdateResponse)(nil), // 1: build.please.remote.lucidity.UpdateResponse
	(*Workers)(nil),        // 2: build.please.remote.lucidity.Workers
	(*Disable)(nil),        // 3: build.please.remote.lucidity.Disable
}
var file_proto_lucidity_lucidity_proto_depIdxs = []int32{
	0, // 0: build.please.remote.lucidity.Workers.workers:type_name -> build.please.remote.lucidity.UpdateRequest
	0, // 1: build.please.remote.lucidity.Lucidity.Update:input_type -> build.please.remote.lucidity.UpdateRequest
	1, // 2: build.please.remote.lucidity.Lucidity.Update:output_type -> build.please.remote.lucidity.UpdateResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_proto_lucidity_lucidity_proto_init() }
func file_proto_lucidity_lucidity_proto_init() {
	if File_proto_lucidity_lucidity_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_lucidity_lucidity_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lucidity_lucidity_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lucidity_lucidity_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Workers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lucidity_lucidity_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Disable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_lucidity_lucidity_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_lucidity_lucidity_proto_goTypes,
		DependencyIndexes: file_proto_lucidity_lucidity_proto_depIdxs,
		MessageInfos:      file_proto_lucidity_lucidity_proto_msgTypes,
	}.Build()
	File_proto_lucidity_lucidity_proto = out.File
	file_proto_lucidity_lucidity_proto_rawDesc = nil
	file_proto_lucidity_lucidity_proto_goTypes = nil
	file_proto_lucidity_lucidity_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// LucidityClient is the client API for Lucidity service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LucidityClient interface {
	// Update sends the server an update on the current state of a worker.
	Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*UpdateResponse, error)
}

type lucidityClient struct {
	cc grpc.ClientConnInterface
}

func NewLucidityClient(cc grpc.ClientConnInterface) LucidityClient {
	return &lucidityClient{cc}
}

func (c *lucidityClient) Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*UpdateResponse, error) {
	out := new(UpdateResponse)
	err := c.cc.Invoke(ctx, "/build.please.remote.lucidity.Lucidity/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LucidityServer is the server API for Lucidity service.
type LucidityServer interface {
	// Update sends the server an update on the current state of a worker.
	Update(context.Context, *UpdateRequest) (*UpdateResponse, error)
}

// UnimplementedLucidityServer can be embedded to have forward compatible implementations.
type UnimplementedLucidityServer struct {
}

func (*UnimplementedLucidityServer) Update(context.Context, *UpdateRequest) (*UpdateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}

func RegisterLucidityServer(s *grpc.Server, srv LucidityServer) {
	s.RegisterService(&_Lucidity_serviceDesc, srv)
}

func _Lucidity_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LucidityServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/build.please.remote.lucidity.Lucidity/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LucidityServer).Update(ctx, req.(*UpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Lucidity_serviceDesc = grpc.ServiceDesc{
	ServiceName: "build.please.remote.lucidity.Lucidity",
	HandlerType: (*LucidityServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Update",
			Handler:    _Lucidity_Update_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/lucidity/lucidity.proto",
}
