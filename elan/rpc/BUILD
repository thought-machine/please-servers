go_library(
    name = "rpc",
    srcs = glob(
        ["*.go"],
        exclude = ["*_test.go"],
    ),
    visibility = [
        "//elan/...",
        "//mettle/worker/...",
    ],
    deps = [
        "///third_party/go/cloud.google.com_go_storage//:storage",
        "///third_party/go/github.com_bazelbuild_remote-apis-sdks//go/pkg/client",
        "///third_party/go/github.com_bazelbuild_remote-apis-sdks//go/pkg/digest",
        "///third_party/go/github.com_bazelbuild_remote-apis-sdks//go/pkg/uploadinfo",
        "///third_party/go/github.com_bazelbuild_remote-apis//build/bazel/remote/execution/v2",
        "///third_party/go/github.com_bazelbuild_remote-apis//build/bazel/semver",
        "///third_party/go/github.com_dgraph-io_ristretto//:ristretto",
        "///third_party/go/github.com_go-redis_redis_v8//:v8",
        "///third_party/go/github.com_golang_protobuf//proto",
        "///third_party/go/github.com_hashicorp_go-multierror//:go-multierror",
        "///third_party/go/github.com_klauspost_compress//zstd",
        "///third_party/go/github.com_peterebden_go-cli-init_v4//logging",
        "///third_party/go/github.com_prometheus_client_golang//prometheus",
        "///third_party/go/gocloud.dev//blob",
        "///third_party/go/gocloud.dev//blob/fileblob",
        "///third_party/go/gocloud.dev//blob/gcsblob",
        "///third_party/go/gocloud.dev//blob/memblob",
        "///third_party/go/gocloud.dev//gcerrors",
        "///third_party/go/golang.org_x_exp//slices",
        "///third_party/go/golang.org_x_sync//errgroup",
        "///third_party/go/google.golang.org_api//googleapi",
        "///third_party/go/google.golang.org_genproto_googleapis_bytestream//:bytestream",
        "///third_party/go/google.golang.org_genproto_googleapis_rpc//status",
        "///third_party/go/google.golang.org_grpc//health/grpc_health_v1",
        "//grpcutil",
        "//proto/purity",
        "//redis",
        "//rexclient",
        "//third_party/go:grpc",
    ],
)

go_test(
    name = "compression_test",
    srcs = ["compression_test.go"],
    data = [":test_data"],
    deps = [
        ":rpc",
        "///third_party/go/github.com_klauspost_compress//zstd",
        "///third_party/go/google.golang.org_genproto_googleapis_bytestream//:bytestream",
        "//grpcutil",
        "///third_party/go/github.com_stretchr_testify//assert",
        "///third_party/go/github.com_stretchr_testify//require",
    ],
)

genrule(
    name = "test_data",
    cmd = [
        'for i in `seq 1 10000`; do echo "$i ----------------------------------------- $i" >> "tmp.txt"; done',
        'HASH="`sha256sum tmp.txt | cut -c -64`"',
        'PREFIX="${HASH:0:2}"',
        'mkdir -p "data/cas/${PREFIX}" "data/zstd_cas/${PREFIX}"',
        'cat tmp.txt | "$TOOL" > "data/zstd_cas/${PREFIX}/${HASH}"',
        'mv tmp.txt "data/cas/${PREFIX}/${HASH}"',
    ],
    output_dirs = ["data"],
    test_only = True,
    tools = ["//scripts:compress"],
)
